#include "Shopping-model.nddl"

int horizonEnd = 100;

// Allocate instances
//Location Home = new Location("Home");
//Location SuperMarket = new Location("SuperMarket");
//Location HardwareStore = new Location("HardwareStore");

//Product Banana = new Product("Banana");
//Product Milk = new Product("Milk");
//Product Drill = new Product("Drill");

ProductLocation bananaLocation = new ProductLocation(SuperMarket, Banana);
ProductLocation milkLocation = new ProductLocation(SuperMarket, Milk);
ProductLocation drillLocation = new ProductLocation(HardwareStore, Drill);

AgentLocation location = new AgentLocation(External);
Agent agent = new Agent(Internal);

// Indicate that the database is closed - no new objects can be created
close();


// Goal token for starting at home at the beginning
// (alternatively require it to precede all Buy tokens)
// rejectable(location.At start);
// start.loc.specify(Home);
// start.start.specify(0);

// Goal tokens for all purchases
// rejectable(agent.Own buy1);
// rejectable(agent.Own buy2);
// rejectable(agent.Own buy3);

// buy1.product.specify(Milk);
// buy2.product.specify(Banana);
// buy3.product.specify(Drill);

// Goal token for ending at home after all purchases
goal(agent.Go finish);
finish.to.specify(Home);
finish.end.specify(horizonEnd);

// buy1 after start;
// buy2 after start;
// buy3 after start;

// buy1 before finish;
// buy2 before finish;
// buy3 before finish;

// Force things to happen within our horizon:
// leq(0, start.start);
// leq(finish.end, horizonEnd);
// The planner should take it form here!

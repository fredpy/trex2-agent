
typedef float [-90.0 90.0]       LATITUDE; // Range for latitude values
typedef float [-126.0 -120.0001] LONGITUDE; // Range for longitude. Kept in UTM ZONE 10

typedef float [0.0 10000000.0]   NORTHING;  // UTM northing (in m)
typedef float [0.0 6000000.0]    EASTING;   // UTM easting (in m)
typedef float [-10.0 6000.0]     DEPTH;     // depth below see level (in m)

typedef float [0.0 2.0]      SPEED;
typedef float [-180.0 180.0] DEGREE;
typedef float [-30.0 30.0]   PITCH;

class VehicleState extends AgentTimeline {
  predicate Holds {
    // Location attributes
    LATITUDE  lat;
    LONGITUDE lon;
    NORTHING  x;
    EASTING   y;
    DEPTH     z;

    // sensor attributes (TBD)

    // constraints
    duration == 1;
    geo_to_utm(lat, lon, x, y);
  }

  VehicleState(Mode _mode) {
    super(_mode, "Holds");
  }
}


class Behavior extends AgentTimeline {
  predicate Inactive {}
  
  action Active {}

  Behavior(Mode _mode) {
    super(_mode, "Inactive");
  }
}

class Mutex extends Timeline {
  predicate InUse {
    Behavior _owner;
  }

  Mutex() {
    super();
  }
}

class SequentialBehavior extends Behavior {
  Mutex _mtx;
  
  action Active {}
  
  SequentialBehavior(Mode _mode, Mutex mtx) {
    super(_mode);
    _mtx = mtx;
  }
}

SequentialBehavior::Active {
  equals(object._mtx.InUse lock);
  lock._owner == object;
}


class SetPoint extends SequentialBehavior {
  action Active {
    SPEED  speed;
    DEGREE heading;
    PITCH  pitch;
  }

  SetPoint(Mode _mode, Mutex mtx) {
    super(_mode, mtx);
  }
}

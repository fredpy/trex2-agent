
rule RemoveBinaries {
  local target = $(1) ;
  NotFile $(target) ;
}

actions RemoveBinaries {
# '*.output' & '*.gprof' should probably have separate rules and actions, but ...
find . \( -name '*.[ao]' -o -name '*.so' -o -name '*_[gop]' -o -name '*_rt' -o -name '*_no' -o -name '*.output' -o -name '*.gprof' \) -exec rm {} \;
}

rule Doxygen {
  local target = $(1) ;
  NotFile $(target) ;
  Always $(target) ;
}

actions Doxygen {
$(DOXYGEN_CMD)
}

rule CheckBranch {
  NotFile $(1) ;
  Always $(1) ;
} 

actions CheckBranch {
  cd $(2) ; svn info | grep -q $(1) ;
}


rule Dist {
  local file = $(1)-$(TREX_MAJOR).$(TREX_MINOR).$(TREX_RELEASE).tgz ;
  NotFile dist ;
  NotFile $(1) ;
  Depends dist : clean ;
  Depends dist : $(file) ;
  MakeDist $(file) : $(1) ;
} 

rule MakeDist {
  Clean clean : $(1) ;
  DISTFILES = [ FDirName $($(_top)) * ] ;
  Always $(1) ;
}

actions MakeDist bind DISTFILES {
  tar zcf $(1) -s /\./$(2)/ $(DISTFILES)
}

{
  local SUBDIR = [ FDirName $($(_top)) ] ;

  include [ FDirName  $(SUBDIR) Platformrules ] ;
  include [ FDirName  $(SUBDIR) Modulerules ] ;
#  include [ FDirName  $(SUBDIR) Jamfile ] ;
  
  PROJECT = TREX ;
  TREX_READY = TRUE ;
}



#include "declarations.nddl"
#include "navigator.nddl"
#include "platform.nddl"

VehicleState::Boot {
    contained_by(Navigator.Idle);
}

Navigator::Going {
	
	met_by(VehicleState.Ready ready);
	ready.end <= end;
	starts_during(TrexSupervision.Active active);
	
	int maneuver_end;
	
	if( ready.start<=AGENT_CLOCK ) {
	  float distance;
	  
	  met_by(EstimatedState.Position ini);
	  
	  distance == ll_distance(ini.latitude, ini.longitude, latitude, longitude);	  
	  
	  if (distance <= 10 && secs <= 1) {
	  	bind(duration, 1);
	  } 
	  else {
	  
		  contains(VehicleCommand.Maneuver maneuver);
		  maneuver.end == end;
		  latitude == maneuver.latitude;
		  longitude == maneuver.longitude;
		  depth == maneuver.depth;
		  maneuver.secs == secs;
		  speed == maneuver.speed;
		  maneuver_end == maneuver.end;
		  estimated_duration == floor(distance * speed * TICK_DURATION) - [5, 15]; 
		  
		  if (distance > 30) {
		  	maneuver.duration * 3 >= estimated_duration;
		  }
		  
		  maneuver.duration <= estimated_duration * 2;
		  duration_interval == maneuver.duration; 
	   }
	}
	
	
	//if( maneuver_end <= AGENT_CLOCK ) {
	//    float dist;
	//    ends(EstimatedState.Position dest);
	//	dist == ll_distance(dest.latitude, dest.longitude, latitude, longitude);	   
	//  	dist < 20;
	//}
}
class YoYoParams {
	
	float min_z, max_z, speed;
	int secs_underwater, secs_at_surface;
	
	YoYoParams(float _min_z, float _max_z, float _speed, int _secs_underwater, int _secs_at_surface) {
		min_z = _min_z;
		max_z = _max_z;
		speed = _speed;
		secs_underwater = _secs_underwater;
		secs_at_surface = _secs_at_surface;
	}	
}

class YoYoState extends AgentTimeline {
	
	YoYoParams params;
	
	YoYoState(Mode _mode, YoYoParams _params) {
		super(_mode, "Idle");
		params = _params;
	}
	
	predicate Idle {}
	
	predicate Descending {
		float latitude, longitude;
	}
	
	predicate Ascending {
		float latitude, longitude;
	}
	
	predicate Surfacing {
		float latitude, longitude;
	}
	
	predicate Done {
		float latitude, longitude;
	}	
}

class YoYoActions extends AgentTimeline {
	
	YoYoParams params;
	
	YoYo(Mode _mode, YoYoParams _params) {
		super(_mode, "Idle");
		params = _params;
	}	
	
	predicate Idle {}
	
	action Descend {
		float latitude, longitude;
	}
	
	action Ascend {
		float latitude, longitude;
	}
	
	action Surface {
		float latitude, longitude;
	}
}

YoYoState::Done {
	contained_by(Reference.At at);
		at.latitude == latitude;
		at.longitude == longitude;
	
	duration == 1;
}

YoYoActions::Surface {

	contained_by(condition ControlMode.TREX c);
		c.start + 1 < start;
	
	equals(condition YoYoState.Surfacing surf);
		surf.latitude == latitude;
		surf.longitude == longitude;
	
	met_by(condition YoYoState.Ascending asc);
		asc.latitude == latitude;
		asc.longitude == longitude;
	
	equals(condition Reference.Going g);
		g.latitude == latitude;
		g.longitude == longitude;
		g.speed == object.params.speed;
		g.z == 0;
	
	meets(effect YoYoState.Done done);
		done.latitude == latitude;
		done.longitude == longitude;
	
	meets(condition ReferenceState.Going arr);
		arr.latitude == latitude;
		arr.longitude == longitude;
		arr.speed == object.params.speed;
		arr.z == 0;
		arr.near_z == true;
		
	duration >= 20;
}

YoYoActions::Ascend {

	contained_by(condition ControlMode.TREX c);
		c.start + 1 < start;

	equals(condition YoYoState.Ascending asc);
		asc.latitude == latitude;
		asc.longitude == longitude;
	
	met_by(condition YoYoState.Descending desc);
		desc.latitude == latitude;
		desc.longitude == longitude;
	
	equals(condition Reference.Going g);
		g.latitude == latitude;
		g.longitude == longitude;
		g.speed == object.params.speed;
		g.z == object.params.min_z;

	met_by(condition ReferenceState.Going b);
		b.latitude == latitude;
		b.longitude == longitude;
		b.speed == object.params.speed;
		b.z == object.params.max_z;
		b.near_z == true;
				
	meets(condition ReferenceState.Going arr);
		arr.latitude == latitude;
		arr.longitude == longitude;
		arr.speed == object.params.speed;
		arr.z == object.params.min_z;
		arr.near_z == true; 	
		
	meets(effect YoYoState.Surfacing surf);
		surf.latitude == latitude;
		surf.longitude == longitude;
		
		duration >= 20;
}

YoYoActions::Descend {

	contained_by(condition ControlMode.TREX c);
		c.start + 1 < start;
	
	equals(condition YoYoState.Descending desc);
		desc.latitude == latitude;
		desc.longitude == longitude;
	
	equals(condition Reference.Going g);
		g.latitude == latitude;
		g.longitude == longitude;
		g.speed == object.params.speed;
		g.z == object.params.max_z;
		
	meets(effect YoYoState.Ascending asc);
		asc.latitude == latitude;
		asc.longitude == longitude;
	
	meets(condition ReferenceState.Going arr);
		arr.latitude == latitude;
		arr.longitude == longitude;
		arr.speed == object.params.speed;
		arr.z == object.params.max_z;
		arr.near_z == true;	
		
	duration >= 20;
}
#include "declarations.nddl"
#include "navigator.nddl"
#include "platform.nddl"

VehicleDepth::Surface {
	met_by(EstimatedState.Position bef);
	meets(EstimatedState.Position aft);
	bef.depth >= 0.2;
	aft.depth <= 0.1;
}

VehicleState::Boot {
    contained_by(Navigator.Idle);
}

Navigator::Going {
	
	int maneuver_end;
	
	met_by(VehicleState.Ready ready);
	    ready.end <= end;
	
	contained_by(VehicleState.Exec);
	
	contained_by(TrexSupervision.Active);

	
	
	if( ready.start<=AGENT_CLOCK ) {
	  float distance;
	  
	  met_by(EstimatedState.Position ini);
	  
	  //if (abs(ini.depth - depth) >= 5.0) {
      //    contains(VehicleCommand.Maneuver elev);
	  //	  elev.latitude == ini.latitude;
	  //	  elev.longitude == ini.longitude;
	  //	  elev.depth == depth;
	  //	  elev.secs == 0;	  	
	  //	  elev meets maneuver;
	  //} 
	  
	  ends(VehicleCommand.Maneuver maneuver);
		  
	  distance == ll_distance(ini.latitude, ini.longitude, latitude, longitude);	  
	  
	  maneuver.end == end;
	  latitude == maneuver.latitude;
	  longitude == maneuver.longitude;
	  depth == maneuver.depth;
	  maneuver.secs == secs;
	  speed == maneuver.speed;
	  maneuver_end == maneuver.end;
	  estimated_duration == floor(distance * speed * TICK_DURATION) - [5, 15]; 		  		  	
	  
	  if (distance > 30) {
	   	  maneuver.duration * 3 >= estimated_duration;
	  }
		  
      maneuver.duration <= estimated_duration * 2;
      duration_interval == maneuver.duration; 		
      

    }
	
	

}